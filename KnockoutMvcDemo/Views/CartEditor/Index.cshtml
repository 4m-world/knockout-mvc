@using PerpetuumSoft.Knockout
@model KnockoutMvcDemo.Models.CartEditorModel
@{
  var ko = Html.CreateKnockoutContext();
}
<table>
  <thead>
    <tr>
      <th width='25%'>Category</th>
      <th width='25%'>Product</th>
      <th width='15%'>Price</th>
      <th width='10%'>Quantity</th>
      <th width='15%'>Subtotal</th>
      <th width='10%'></th>
    </tr>
  </thead>
  <tbody>
    @using (var lines = ko.Foreach(m => m.Lines))
    {
      <tr>
        <td>
          @lines.Html.DropDownList(
            m => ko.Model.CategoriesId, null,
            item => ko.Model.DataBase[item].Name).Value(m => m.CategoryId).OptionsCaption("Select ...")
        </td>
        <td>
          @lines.Html.DropDownList(
            m => ko.Model.ProductsId[m.CategoryId], null,
            (m, item) => ko.Model.DataBase[m.CategoryId].Products[item].Name).Value(m => m.ProductId).OptionsCaption("Select...")
        </td>
        <td>
          @using (lines.If(m => m.ProductId != -1))
          {
            using (var product = lines.With(m => ko.Model.DataBase[m.CategoryId].Products[m.ProductId]))
            {
              @product.Html.Span(m => "\\$" + m.Price)                  
            }
          }
        </td>
        <td>
          @lines.Html.TextBox(m => m.Quantity).ValueUpdate(KnockoutValueUpdateKind.AfterKeyDown)
        </td>
        <td>
          @using (lines.If(m => m.ProductId != -1))
          {
            using (var product = lines.With(m => ko.Model.DataBase[m.CategoryId].Products[m.ProductId]))
            {
              @product.Html.Span(m => "\\$" + (lines.Model.Quantity * m.Price))              
            }
          }
        </td>
        <td>
          @ko.Html.HyperlinkButton("Remove", "RemoveLine", "CartEditor", new { index = "$index()" })
        </td>
      </tr>
    }
  </tbody>
</table>
@ko.Html.Button("Add product", "AddLine", "CartEditor")
<style scoped="scoped">
  input, select {
    width: 120px;
  }
</style>
  
@ko.Apply(Model)
